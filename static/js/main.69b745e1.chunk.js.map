{"version":3,"sources":["serviceWorker.js","ui/navbar.js","ui/container.js","ui/title.js","components/brand.js","ui/select.js","components/sortByPrice.js","ui/section.js","ui/card.js","ui/image.js","ui/cardBody.js","ui/button.js","ui/cardFooter.js","ui/cardTitle.js","ui/cardPrice.js","ui/cardQuantity.js","ui/cardBodyWrapper.js","ui/cardImage.js","components/fruitCard.js","ui/wrapper.js","containers/home.js","index.js"],"names":["Boolean","window","location","hostname","match","Navbar","styled","div","_templateObject","props","theme","primaryBackground","Container","container_templateObject","extraSmallScreen","smallScreen","mediumScreen","largeScreen","Title","h1","title_templateObject","secondaryColor","Brand","react_default","a","createElement","Select","select","select_templateObject","SortByPrice","_ref","changePriceOrder","className","onChange","e","value","Section","section","section_templateObject","Card","card_templateObject","Image","img","image_templateObject","src","width","height","CardBody","cardBody_templateObject","Button","button","button_templateObject","hoverColor","CardFooter","cardFooter_templateObject","CardTitle","cardTitle_templateObject","CardPrice","cardPrice_templateObject","CardQuantity","cardQuantity_templateObject","CardBodyWrapper","cardBodyWrapper_templateObject","CardImageWrapper","cardImage_templateObject","FruitCard","itemName","imgSrc","price","quantityRemaining","removeItem","id","onClick","data-id","Wrapper","wrapper_templateObject","display","alignItems","justifyContent","flexWrap","marginLeft","marginRight","Home","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","list","getFruits","map","item","index","fruitCard","assign","key","removeItemFromList","parseInt","currentTarget","dataset","setState","filterListById","filter","sortTheListByLowestPrice","sort","b","sortTheListByHighestPrice","handlerChangeOrderByPrice","result","inherits","createClass","fruitList","_this2","react","brand","sortByPrice","Component","GlobalStyles","createGlobalStyle","src_templateObject","app","styled_components_browser_esm","primaryColor","home","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.69b745e1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const Navbar = styled.div`\r\n    border-bottom : 2px solid ${props=>props.theme.primaryBackground}\r\n`","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n    padding-right : 15px;\r\n    padding-left  : 15px;\r\n    margin : 0 auto;\r\n    @media screen and (min-width: ${ props => props.theme.extraSmallScreen } ){\r\n        max-width: 540px;\r\n    }\r\n    @media screen and (min-width: ${ props => props.theme.smallScreen } ){\r\n        max-width: 720px;\r\n    }\r\n    @media screen and (min-width: ${ props => props.theme.mediumScreen } ){\r\n        max-width: 960px;\r\n    }\r\n    @media screen and (min-width: ${ props => props.theme.largeScreen }){\r\n        max-width: 1140px;\r\n    }\r\n`;\r\n","import styled from 'styled-components'\r\n\r\n\r\nexport const Title = styled.h1`\r\n    margin: 0;\r\n    margin-top: 20px;\r\n    padding: 1px 40px; \r\n    background : ${props=>props.theme.primaryBackground};\r\n    color : ${props=>props.theme.secondaryColor};\r\n`","import React from 'react'\r\nimport { Title } from '../ui/title';\r\n\r\nconst Brand = () => <Title>Fruit</Title>\r\n\r\nexport default Brand\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const Select = styled.select`\r\n\r\n`;","import React from 'react'\r\nimport { Select } from '../ui/select';\r\n\r\nconst SortByPrice = ({ changePriceOrder }) => {\r\n  return (\r\n    <div className=\"d-flex pb-3\">\r\n    <span className=\"mr-3\">Sort by Price: </span>\r\n      <Select onChange={ (e)=> changePriceOrder(e) }>\r\n          <option value=\"0\">Lowest</option>\r\n          <option value=\"1\">Highest</option>\r\n      </Select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SortByPrice\r\n","import styled from 'styled-components';\r\n\r\nexport const Section = styled.section``;","import styled from 'styled-components';\r\n\r\nexport const Card = styled.div`\r\n        flex: 1 0 200px;\r\n        word-wrap: break-word;\r\n        background-color: #fff;\r\n        background-clip: border-box;\r\n        border: 1px solid ${props=>props.theme.primaryBackground};\r\n        border-radius: .25rem;\r\n        margin : 1rem;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        padding: 1rem;\r\n        @media screen and (min-width: ${ props => props.theme.extraSmallScreen } ){\r\n            max-width : calc(100% - 1rem);\r\n        }\r\n        @media screen and (min-width: ${ props => props.theme.smallScreen } ){\r\n            max-width : calc(50% - 1rem);\r\n        }\r\n        @media screen and (min-width: ${ props => props.theme.mediumScreen } ){\r\n            max-width : calc(50% - 1rem);\r\n        }\r\n        @media screen and (min-width: ${ props => props.theme.largeScreen }){\r\n            max-width: calc(21% - 1rem);\r\n        }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Image = styled.img`\r\n    src : url(${props=>props.src});\r\n    width: ${props=>props.width};    \r\n    height: ${props=>props.height};    \r\n    margin : auto;\r\n`;","\r\nimport styled from 'styled-components';\r\n\r\nexport const CardBody = styled.div``;","import styled from 'styled-components';\r\n\r\n\r\nexport const Button = styled.button`\r\n    width : ${props=> props.width};\r\n    display: inline-block;\r\n    font-weight: 400;\r\n    color: ${props=>props.theme.secondaryColor};\r\n    text-align: center;\r\n    vertical-align: middle;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    background-color: ${props=> props.theme.primaryBackground};\r\n    border: 1px solid ${props=>props.theme.primaryBackground};\r\n    padding: .375rem .75rem;\r\n    font-size: 1rem;\r\n    line-height: 1.5;\r\n    border-radius: .25rem;\r\n    transition: color .15s ease-in-out,\r\n    background-color .15s ease-in-out,\r\n    border-color .15s ease-in-out,\r\n    box-shadow .15s ease-in-out;\r\n    :not(:disabled){\r\n        cursor : pointer;\r\n    }\r\n    :hover{\r\n        background-color: ${props=> props.theme.hoverColor};\r\n        border-color: ${props=> props.theme.hoverColor};\r\n        box-shadow : 0 .5rem 1rem rgba(0,0,0,.15);\r\n    }\r\n    :focus{\r\n        outline : 0;\r\n    }\r\n`;\r\n","\r\nimport styled from 'styled-components';\r\n\r\nexport const CardFooter = styled.div``;","import styled from 'styled-components';\r\n\r\nexport const CardTitle = styled.div`\r\n    text-transform : capitalize;\r\n    text-align : center;\r\n    font-weight:600;\r\n    padding : 1rem 0;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const CardPrice = styled.div`\r\n    font-weight: 600;\r\n    font-size: 1.5rem;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const CardQuantity = styled.div`\r\n    margin-left : 1rem;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const CardBodyWrapper = styled.div`\r\n    display : flex;\r\n    align-items : center;\r\n    justify-content: center;\r\n    margin-bottom: 1rem;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const CardImageWrapper = styled.div`\r\n    text-align : center;\r\n`;","import React from 'react'\r\nimport { Card } from '../ui/card';\r\nimport { Image } from '../ui/image';\r\nimport { CardBody } from '../ui/cardBody';\r\nimport { Button } from '../ui/button';\r\nimport { CardFooter } from '../ui/cardFooter';\r\nimport { CardTitle } from '../ui/cardTitle';\r\nimport { CardPrice } from '../ui/cardPrice';\r\nimport { CardQuantity } from '../ui/cardQuantity';\r\nimport { CardBodyWrapper } from '../ui/cardBodyWrapper';\r\nimport { CardImageWrapper } from '../ui/cardImage';\r\n\r\nconst FruitCard = ({\r\n    itemName,\r\n    imgSrc,\r\n    price,\r\n    quantityRemaining,\r\n    removeItem,\r\n    id\r\n}) => {\r\n  return (\r\n    <Card>\r\n        <CardImageWrapper>\r\n            <Image src={imgSrc} width=\"120px\" height=\"120px\" />\r\n        </CardImageWrapper>\r\n        <CardBody>\r\n            <CardTitle>{itemName}</CardTitle>\r\n            <CardBodyWrapper>\r\n                <CardPrice> \r\n                    ${price} \r\n                </CardPrice>\r\n                <CardQuantity>\r\n                    {quantityRemaining} In Stock\r\n                </CardQuantity>\r\n            </CardBodyWrapper>\r\n        </CardBody>\r\n        <CardFooter>\r\n           <Button width=\"100%\" onClick={removeItem} data-id={id} >Remove</Button>\r\n        </CardFooter>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default FruitCard\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    display: ${props=>props.display};\r\n    align-items : ${props=>props.alignItems};\r\n    justify-content: ${props=>props.justifyContent};\r\n    flex-wrap : ${props=>props.flexWrap};\r\n    margin-left: ${props=>props.marginLeft};\r\n    margin-right: ${props=>props.marginRight};\r\n`;\r\n\r\n","import React, { Component, Fragment } from 'react'\r\nimport { Navbar } from '../ui/navbar'\r\nimport { Container } from '../ui/container';\r\nimport Brand from '../components/brand';\r\nimport SortByPrice from '../components/sortByPrice';\r\nimport { Section } from '../ui/section';\r\nimport fruitList from '../storeItems.json';\r\nimport FruitCard from '../components/fruitCard';\r\nimport {Wrapper} from '../ui/wrapper';\r\n\r\nexport class Home extends Component {\r\n  state = {\r\n            list : []\r\n          };\r\n  componentDidMount(){\r\n    this.setState({ list: this.sortTheListByLowestPrice( fruitList ) });\r\n  }\r\n  /**\r\n   * List fruit lists.\r\n   */\r\n  getFruits = () => {\r\n    return this.state.list.length ? this.state.list.map((item,index) => {\r\n                                          return <FruitCard key={index}\r\n                                                            id={index} \r\n                                                            {...item} \r\n                                                            removeItem = { this.removeItemFromList } \r\n                                                  />\r\n                                        }) : \"\";\r\n  }\r\n  /**\r\n   * remove given item from list.\r\n   */\r\n  removeItemFromList = (e) => {\r\n    const id = parseInt(e.currentTarget.dataset.id);\r\n    const { list } = this.state;\r\n    this.setState( { list : this.filterListById(id,list)  });\r\n  }\r\n  /** \r\n   * filter the list by id.\r\n   */\r\n  filterListById = (id,list) => {\r\n    return list.filter( (item, index) => {\r\n      return index !== id;\r\n    });\r\n  }\r\n  /**\r\n   * Sort the list by ascending price order.\r\n   */\r\n  sortTheListByLowestPrice = (list) => {\r\n    return list.sort( (a, b) => { \r\n        return a.price - b.price;\r\n    });\r\n  }\r\n  /**\r\n   * Sort the list by descending price order.\r\n   */\r\n  sortTheListByHighestPrice = (list) => {\r\n    return list.sort( (a, b) => { \r\n      return b.price - a.price;\r\n  });\r\n  }\r\n  /**\r\n   * Handler for changing the price order.\r\n   */\r\n  handlerChangeOrderByPrice = (e) => {\r\n    const {list} = this.state;\r\n    const {value} = e.currentTarget;\r\n    let result;\r\n    if(value===\"1\"){\r\n      result = this.sortTheListByHighestPrice(list);\r\n    }\r\n    else{\r\n      result = this.sortTheListByLowestPrice(list);\r\n    }\r\n    this.setState( { list: result } );\r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Navbar>\r\n          <Container>\r\n            <Wrapper display=\"flex\" alignItems=\"flex-end\" justifyContent=\"space-between\">\r\n              <Brand />\r\n              <SortByPrice changePriceOrder={(e)=>this.handlerChangeOrderByPrice(e)} />\r\n            </Wrapper>\r\n          </Container>\r\n        </Navbar>\r\n        <Section>\r\n          <Container>\r\n            <Wrapper display=\"flex\" flexWrap=\"wrap\" marginLeft=\"-1rem\" marginRight=\"-1rem\">\r\n            { this.getFruits() }\r\n            </Wrapper>\r\n          </Container>\r\n        </Section>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React , {Fragment} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Home from './containers/home';\r\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\r\n\r\nconst theme = {\r\n    primaryBackground : \"#35c796\",\r\n    primaryColor : \"black\",\r\n    secondaryColor : \"white\",\r\n    extraSmallScreen : \"576px\",\r\n    smallScreen : \"768px\",\r\n    mediumScreen : \"992px\",\r\n    largeScreen : \"1200px\",\r\n    hoverColor : \"#36bd90\"\r\n};\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    html,body{\r\n        height : 100%\r\n    }\r\n    body{\r\n        margin : 0;\r\n        padding : 0;\r\n        font-family : -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size: 1rem;\r\n        font-weight: 400;\r\n        line-height: 1.25;\r\n    }\r\n    .d-flex{\r\n        display :flex;\r\n    }\r\n    .mr-3{\r\n        margin-right: 1rem;\r\n    }\r\n    .pb-3{\r\n        padding-bottom:1rem;\r\n    }\r\n    .pr-3{\r\n        padding-right: 1rem;\r\n    }\r\n    .w-100{\r\n        width: 100%;\r\n    }\r\n`\r\nconst app = (\r\n    <Fragment>\r\n        <GlobalStyles />\r\n        <ThemeProvider theme={theme}>\r\n            <Home />\r\n        </ThemeProvider>\r\n    </Fragment>\r\n);\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}